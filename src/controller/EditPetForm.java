package controller;

import java.io.IOException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import petshop.models.Cat;
import petshop.models.Dog;
import petshop.models.Hamster;
import petshop.models.Pet;

/**
 *
 * @author NTA
 */
public class EditPetForm extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(EditPetForm.class.getName());

    Pet pet;
    List<Pet> petList;
    private DefaultTableModel model;
    public EditPetForm(Pet pet, List<Pet> petList, DefaultTableModel model) {
        initComponents();
        this.pet = pet;
        this.petList = petList;
        this.model = model;
        choose.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cat", "Dog", "Hamster" }));
        id.setText(pet.getId());
        if(pet instanceof Cat c) name.setText(c.getName());
        if(pet instanceof Dog c) name.setText(c.getName());
        if(pet instanceof Hamster c) name.setText("Không Có Tên");
        choose.setSelectedItem(pet.getClass().getSimpleName());
        age.setText(String.valueOf(pet.getAge()));
        price.setText(String.valueOf(pet.getPrice()));
        color.setText(pet.getColor());
        ////
        if(pet instanceof Cat c) descrip.setText(c.getDescrip());
        if(pet instanceof Dog c) descrip.setText(c.getDescrip());
        if(pet instanceof Hamster c) descrip.setText(c.getDescrip());
        ///
        if(pet instanceof Cat c) count.setText(String.valueOf(c.isInStock()));
        if (pet instanceof Dog c) {
            count.setText(String.valueOf(c.isInStock()));
        }
        if (pet instanceof Hamster c) {
            count.setText(String.valueOf(c.isInStock()));
        }
        ///
        if (pet instanceof Cat c) {
            vacxin.setText(c.isVacxinated() ? "Đã Tiêm" : "Chưa Tiêm");
        }
        if (pet instanceof Dog d) {
            vacxin.setText(d.isVacxinated() ? "Đã Tiêm" : "Chưa Tiêm");
        }
        if (pet instanceof Hamster h) {
            vacxin.setText(h.isVacxinated() ? "Đã Tiêm" : "Chưa Tiêm");
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        choose = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        age = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        color = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        descrip = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        count = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        vacxin = new javax.swing.JTextField();
        done = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 32)); // NOI18N
        jLabel1.setText("Thay Đổi Thông Tin ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel2.setText("Mã Thú Cưng :");

        id.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel3.setText("Tên Thú Cưng :");

        name.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel4.setText("Loại :");

        choose.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        choose.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel5.setText("Tuổi :");

        age.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel6.setText("Giá :");

        price.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel7.setText("Màu Lông :");

        color.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel9.setText("Mô Tả :");

        descrip.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel10.setText("Số Lượng :");

        count.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel11.setText("Vacxin :");

        vacxin.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        done.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        done.setText("Xong");
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setText("Thoát");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(43, 43, 43)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(id)
                            .addComponent(name)
                            .addComponent(choose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(age)
                            .addComponent(price)
                            .addComponent(color)
                            .addComponent(descrip)
                            .addComponent(count)
                            .addComponent(vacxin, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(369, 369, 369)
                        .addComponent(done, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(363, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(329, 329, 329))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(58, 58, 58))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(choose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(descrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(vacxin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(done)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
         try {
            String selectedType = choose.getSelectedItem().toString();
            String petId = id.getText();
            int petAge = Integer.parseInt(age.getText());
            double petPrice = Double.parseDouble(price.getText());
            String petColor = color.getText();
            String petDescrip = descrip.getText();
            int petStock = Integer.parseInt(count.getText());
            boolean petVac = vacxin.getText().trim().equalsIgnoreCase("Đã Tiêm");

            Pet newPet;
            if (selectedType.equals("Cat")) {
                String petName = name.getText();
                newPet = new Cat(petName, petDescrip, petStock, petVac, petId, petPrice, petAge, 0.0, petColor);
            } else if (selectedType.equals("Dog")) {
                String petName = name.getText();
                newPet = new Dog(petName, petDescrip, petStock, petVac, petId, petPrice, petAge, 0.0, petColor);
            } else { // Hamster
                newPet = new Hamster(petDescrip, petVac, petStock, petId, petPrice, petAge, 0.0, petColor);
            }

            // Cập nhật petList
            for (int i = 0; i < petList.size(); i++) {
                if (petList.get(i).getId().equalsIgnoreCase(pet.getId())) {
                    petList.set(i, newPet);
                    break;
                 }
             }
             // Cập nhật petList
             for (int i = 0; i < petList.size(); i++) {
                 if (petList.get(i).getId().equalsIgnoreCase(pet.getId())) {
                     petList.set(i, newPet);
                     break;
                 }
             }

            // Cập nhật bảng
            for (int i = 0; i < model.getRowCount(); i++) {
                if (model.getValueAt(i, 0).toString().equalsIgnoreCase(pet.getId())) {
                    if (newPet instanceof Cat cat) {
                        model.setValueAt(cat.getName(), i, 1);
                        model.setValueAt("Cat", i, 2);
                        model.setValueAt(cat.getAge(), i, 3);
                        model.setValueAt(cat.getPrice(), i, 4);
                        model.setValueAt(cat.getColor(), i, 5);
                        model.setValueAt(cat.getDescrip(), i, 6);
                        model.setValueAt(cat.isInStock(), i, 7);
                        model.setValueAt(cat.isVacxinated() ? "Đã Tiêm" : "Chưa Tiêm", i, 8);
                    } else if (newPet instanceof Dog dog) {
                        model.setValueAt(dog.getName(), i, 1);
                        model.setValueAt("Dog", i, 2);
                        model.setValueAt(dog.getAge(), i, 3);
                        model.setValueAt(dog.getPrice(), i, 4);
                        model.setValueAt(dog.getColor(), i, 5);
                        model.setValueAt(dog.getDescrip(), i, 6);
                        model.setValueAt(dog.isInStock(), i, 7);
                        model.setValueAt(dog.isVacxinated() ? "Đã Tiêm" : "Chưa Tiêm", i, 8);
                    } else if (newPet instanceof Hamster ham) {
                        model.setValueAt("Không Có Tên", i, 1);
                        model.setValueAt("Hamster", i, 2);
                        model.setValueAt(ham.getAge(), i, 3);
                        model.setValueAt(ham.getPrice(), i, 4);
                        model.setValueAt(ham.getColor(), i, 5);
                        model.setValueAt(ham.getDescrip(), i, 6);
                        model.setValueAt(ham.isInStock(), i, 7);
                        model.setValueAt(ham.isVacxinated() ? "Đã Tiêm" : "Chưa Tiêm", i, 8);
                    }
                    boolean vax = false;
                    if (newPet instanceof Cat cat) {
                        vax = cat.isVacxinated();
                    } else if (newPet instanceof Dog dog) {
                        vax = dog.isVacxinated();
                    } else if (newPet instanceof Hamster ham) {
                        vax = ham.isVacxinated();
                    }
                    model.setValueAt(vax ? "Đã Tiêm" : "Chưa Tiêm", i, 8);
                    break;
                }
            }

            JOptionPane.showMessageDialog(this, "Đã cập nhật thành công!");
            dispose();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi dữ liệu: " + e.getMessage());
        }
    }//GEN-LAST:event_doneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField age;
    private javax.swing.JComboBox<String> choose;
    private javax.swing.JTextField color;
    private javax.swing.JTextField count;
    private javax.swing.JTextField descrip;
    private javax.swing.JButton done;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField name;
    private javax.swing.JTextField price;
    private javax.swing.JTextField vacxin;
    // End of variables declaration//GEN-END:variables
}
