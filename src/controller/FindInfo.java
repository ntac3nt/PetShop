package controller;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import petshop.models.Pet;

/**
 *
 * @author NTA
 */
public class FindInfo extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FindInfo.class.getName());
    
    List<Pet> petList = new ArrayList<>();
    List<Pet> foundList = new ArrayList<>();
    DefaultTableModel model;
    public FindInfo(DefaultTableModel model, List<Pet> petList, List<Pet> foundList) {
        initComponents();
        this.model = model;
        this.petList = petList;
        this.foundList = foundList;
        resultinfo.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        resultinfo = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        edit = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        resultinfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Thú Cưng", "Tên Thú Cưng", "Loại", "Tuổi", "Giá", "Màu Lông", "Mô Tả", "Số Lượng", "Vacxin"
            }
        ));
        jScrollPane1.setViewportView(resultinfo);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Thông Tin Thú Cưng");

        edit.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        edit.setText("Sửa");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        delete.setText("Xóa");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        exit.setFont(new java.awt.Font("Segoe UI", 0, 22)); // NOI18N
        exit.setText("Thoát");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(edit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(delete)
                .addGap(261, 261, 261))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 832, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(362, 362, 362)
                        .addComponent(exit)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit)
                    .addComponent(delete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(exit)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        if (foundList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không có dữ liệu để sửa!");
            return;
        }
        Pet petToEdit = null;
        if (foundList.size() == 1) {
            petToEdit = foundList.get(0);
        } else {
            String idToEdit = JOptionPane.showInputDialog(this, "Nhập ID thú cưng cần sửa:");
            if (idToEdit == null || idToEdit.trim().isEmpty()) {
                return;
            }

            for (Pet p : foundList) {
                if (p.getId().equalsIgnoreCase(idToEdit.trim())) {
                    petToEdit = p;
                    break;
                }
            }

            if (petToEdit == null) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy thú cưng có ID: " + idToEdit);
                return;
            }
        }

        EditPetForm editForm = new EditPetForm(petToEdit, petList, model);
        editForm.setVisible(true);
    }//GEN-LAST:event_editActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_exitActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        if(foundList.size()==1) {
            Pet toDelete = foundList.get(0);
            petList.removeIf(p -> p.getId().equalsIgnoreCase(toDelete.getId()));
            JOptionPane.showMessageDialog(this, "Đã xóa thú cưng có ID: " + toDelete.getId());
            foundList.remove(0);
            model.removeRow(0);
            dispose();
        } else if(foundList.size() > 1) {
            String idpet = JOptionPane.showInputDialog(this, "Có nhiều kết quả. Nhập ID để xóa:");
            if(idpet != null && !idpet.isEmpty()) {
                Pet toDelete = null;
                for(Pet p : foundList) {
                    if(p.getId().equalsIgnoreCase(idpet)){
                        toDelete = p;
                        break;
                    }
                }
                if(toDelete != null ) {
                    petList.remove(toDelete);
                    for (int i = 0; i < model.getRowCount(); i++) {
                        if (model.getValueAt(i, 0).toString().equalsIgnoreCase(toDelete.getId())) {
                            model.removeRow(i);
                            break;
                        }
                    }
                    JOptionPane.showMessageDialog(this, "Đã xóa thành công pet !");
                }
                else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy thú cưng với ID đã nhập.");
                }
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    public static void main(String args[]) {
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable resultinfo;
    // End of variables declaration//GEN-END:variables
}
